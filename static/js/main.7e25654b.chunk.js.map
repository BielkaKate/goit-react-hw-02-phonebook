{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","console","log","handleSubmit","preventDefault","props","propOnSubmit","reset","this","className","s","contactForm","onSubmit","input","onChange","type","pattern","title","required","button","Component","ContactList","contacts","handleDelete","list","map","id","listItem","deleteButton","onClick","Filter","handleInputChange","App","filter","data","find","contact","alert","prevState","shortid","generate","changeFilter","getVisibleContacts","toLowerCase","includes","handleDeleteContact","contactId","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e25654b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__24c8M\",\"listItem\":\"ContactList_listItem__200w8\",\"deleteButton\":\"ContactList_deleteButton__1uohk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3zdNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__rCed6\",\"input\":\"ContactForm_input__3Wi-R\",\"button\":\"ContactForm_button__3vfAt\"};","import React, {Component} from \"react\";\r\nimport s from \"./ContactForm.module.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass ContactForm extends Component{\r\n\r\n    static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n      };\r\n\r\n\r\n    state = {\r\n        name: \"\",\r\n        number: \"\"\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n        [e.currentTarget.name]: e.currentTarget.value\r\n        })\r\n        console.log(e.currentTarget.value);\r\n    }\r\n\r\n   \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.propOnSubmit({...this.state})\r\n        this.reset()\r\n\r\n    }\r\n\r\n    reset(){\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\"\r\n        }\r\n    \r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Name \r\n                <input className={s.input}\r\n    onChange={this.handleChange}\r\n  type=\"text\"\r\n  name=\"name\"\r\n  value = {this.state.name}\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required\r\n/>\r\n                </label>\r\n                <label>\r\n                    Number \r\n                    \r\n                <input className={s.input}\r\n                onChange={this.handleChange}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value = {this.state.number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required>\r\n                    </input>\r\n                </label>\r\n                <button className={s.button} type=\"submit\">\r\n                Add contact\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ContactForm","import PropTypes from \"prop-types\"\r\nimport s from \"./ContactList.module.css\"\r\n\r\nconst ContactList = ({contacts, handleDelete}) => (\r\n    <ul className={s.list}>\r\n{contacts.map(({id, name, number}) => \r\n(\r\n    <li className={s.listItem} key={id}><span>{name}: {number}</span>\r\n    <button className={s.deleteButton} onClick = {() => handleDelete(id)}>Delete</button>\r\n    </li>\r\n    \r\n)\r\n)}\r\n    </ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })),\r\n    handleDelete: PropTypes.func\r\n  }\r\n\r\n\r\nexport default ContactList","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport s from \"./Filter.module.css\"\r\n\r\nconst Filter = ({value, handleInputChange}) => (\r\n    <label>\r\n        Find contacts by name\r\n        <input className={s.input} type=\"text\" value={value} onChange={handleInputChange}/>\r\n            \r\n    </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    handleInputChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default Filter","import './App.css';\nimport { Component } from 'react';\nimport ContactForm from \"./components/ContactForm/ContactForm\"\nimport ContactList from \"./components/ContactList/ContactList\"\nimport Filter from \"./components/Filter/Filter\"\nimport shortid from \"shortid\"\nimport PropTypes, { shape } from \"prop-types\"\n\nclass App extends Component {\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.number,\n      })\n    ),\n    filter: PropTypes.string,\n  }\n\n\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: '',\n  }\n\nhandleSubmit = (data) =>{\nthis.state.contacts.find(contact => contact.name === data.name) ?\nalert (`${data.name} is already in contacts`) :\n\nthis.setState(prevState => ({contacts: [{id: shortid.generate(), ...data}, ...prevState.contacts],}))\n  }\n\nchangeFilter = e => {\nthis.setState({filter: e.currentTarget.value})\n  }\n\ngetVisibleContacts = () => {\nconst {contacts, filter} = this.state;\nreturn (contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  )\n}\n\nhandleDeleteContact = (contactId) => {\nthis.setState(prevState => ({contacts: \n  prevState.contacts.filter(contact => contact.id !== contactId),\n}))\n}\n\n  render(){\n    const {filter} = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm propOnSubmit={this.handleSubmit}/>\n      <h2>Contacts</h2>\n      <Filter value={filter} handleInputChange={this.changeFilter}/>\n      <ContactList contacts={visibleContacts} handleDelete={this.handleDeleteContact}/>\n    </div>\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}