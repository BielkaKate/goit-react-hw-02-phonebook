{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","console","log","handleSubmit","preventDefault","props","propOnSubmit","reset","this","className","s","contactForm","onSubmit","input","onChange","type","pattern","title","required","button","Component","ContactList","contacts","handleDelete","list","map","id","listItem","deleteButton","onClick","Filter","handleInputChange","App","filter","data","find","contact","toLowerCase","alert","prevState","shortid","generate","changeFilter","getVisibleContacts","includes","handleDeleteContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42d0c38f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__24c8M\",\"listItem\":\"ContactList_listItem__200w8\",\"deleteButton\":\"ContactList_deleteButton__1uohk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3zdNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__rCed6\",\"input\":\"ContactForm_input__3Wi-R\",\"button\":\"ContactForm_button__3vfAt\"};","import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    const {name, value} = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n    console.log(e.currentTarget.value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.propOnSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n  render() {\n    return (\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            className={s.input}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={s.input}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          ></input>\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, handleDelete }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.listItem} key={id}>\n        <span>\n          {name}: {number}\n        </span>\n        <button className={s.deleteButton} onClick={() => handleDelete(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  handleDelete: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, handleInputChange }) => (\n  <label>\n    Find contacts by name\n    <input\n      className={s.input}\n      type=\"text\"\n      value={value}\n      onChange={handleInputChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  handleInputChange: PropTypes.func,\n};\n\nexport default Filter;\n","import './App.css';\nimport { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport shortid from 'shortid';\nimport PropTypes, { shape } from 'prop-types';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.number,\n      }),\n    ),\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleSubmit = data => {\n    this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())\n      ? alert(`${data.name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [\n            { id: shortid.generate(), ...data },\n            ...prevState.contacts,\n          ],\n        }));\n  };\n\n  changeFilter = e => {\n   const {value} = e.currentTarget\n    this.setState({ filter: value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handleDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm propOnSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter value={filter} handleInputChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          handleDelete={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}